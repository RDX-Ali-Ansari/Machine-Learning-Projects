# -*- coding: utf-8 -*-
"""LR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jiWzu368ze-9qVM7o00gxiB7CLzRH1jB

# Multiple Linear Regression Using Sklearn
"""

import pandas as pd
import numpy as np

df = pd.read_csv('auto-mpg.csv')

df.sample(10)

"""### Checking Null Values


"""

df.isnull().sum()

df.info()

df['horsepower'] = df['horsepower'].replace('?', np.nan)

df['horsepower'].fillna(df['horsepower'].median(), inplace = True)

df['horsepower'] = df['horsepower'].astype(float)

"""# EDA"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(20,8))
plt.subplot(1,2,1)
sns.barplot(x=df['origin'], y=df['mpg'])
plt.subplot(1,2,2)
sns.barplot(x=df['cylinders'], y=df['mpg'])
plt.figure(figsize=(20,10))
plt.subplot(1,2,1)
sns.scatterplot(x=df['horsepower'], y=df['mpg'])
plt.subplot(1,2,2)
sns.scatterplot(x=df['weight'], y=df['mpg'])

sns.boxplot(df['horsepower'])

sns.scatterplot(x=df['model year'], y=df['mpg'])

"""### Preprocessing

"""

num_features = ['displacement', 'horsepower', 'weight', 'acceleration']
cat_features = ['origin', 'cylinders', 'model year']

from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer

num_transformer = ColumnTransformer(transformers=[
    ('scaler', StandardScaler(), num_features)
], remainder = 'passthrough')

cat_transformer = ColumnTransformer(transformers=[
    ('encoder', OneHotEncoder(drop='first'), cat_features)
], remainder='passthrough')

X = df.drop(columns = ['mpg', 'car name'], axis=1)
y = df['mpg']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.linear_model import LinearRegression
from sklearn.pipeline import Pipeline

pipeline = Pipeline([
    ('num', num_transformer),
    ('cat', cat_transformer),
    ('model', LinearRegression())
])

pipeline.fit(X_train, y_train)

